module VerifyExamples.DictAny.ModuleDoc0 exposing (..)

-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples).
-- Please don't modify this file by hand!

import Test
import Expect

import DictAny exposing (..)
import DictAny as Dict exposing (Dict)

type alias Museum =
    { name : String, rating : Int }
type ID
    = ID Int

museums : Dict ID Museum
museums =
    [ ( ID 1, { name = "Natural History", rating = 4 } )
    , ( ID 8, { name = "Tate Modern", rating = 3 } )
    , ( ID 42, { name = "Science", rating = 5 } )
    ]
        |> Dict.fromList comparer
comparer : ID -> ID -> Order
comparer (ID a) (ID b) =
    compare a b



spec0 : Test.Test
spec0 =
    Test.test "Module VerifyExamples: \n\n    museums |> Dict.get comparer (ID 42)\n    --> Just { name = \"Science\", rating = 5 }" <|
        \() ->
            Expect.equal
                (
                museums |> Dict.get comparer (ID 42)
                )
                (
                Just { name = "Science", rating = 5 }
                )